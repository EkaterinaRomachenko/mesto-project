(()=>{"use strict";var __webpack_modules__={740:()=>{eval("\n// UNUSED EXPORTS: openImage\n\n;// CONCATENATED MODULE: ./src/components/utils.js\n// попапы\nvar popupProfile = document.querySelector('.popup_profile');\nvar popupPlace = document.querySelector('.popup_place');\nvar popupImage = document.querySelector('.popup_image');\nvar popupAvatar = document.querySelector('.popup_avatar');\n\n// данные профиля\nvar profTitle = document.querySelector('.profile__title');\nvar profSubtitle = document.querySelector('.profile__subtitle');\nvar profAvatar = document.querySelector('.profile__avatar');\n\n// данные попап (изображения)\nvar popupImageTitle = popupImage.querySelector('.popup__image-title');\nvar popupImagePicture = popupImage.querySelector('.popup__image');\n\n// формы\nvar profileForm = document.forms['form-profile'];\nvar placeForm = document.forms['form-place'];\nvar avatarForm = document.forms['form-avatar'];\n\n// инпуты\nvar nameInput = document.querySelector('#input-name');\nvar jobInput = document.querySelector('#input-info');\nvar titleInput = document.querySelector('#input-title');\nvar linkInput = document.querySelector('#input-link');\nvar avatarLinkInput = avatarForm.querySelector('[name=\"linkofavatar\"]');\n\n// кнопки профиля\nvar profileEditButton = document.querySelector('.profile__edit-button');\nvar profileAddButton = document.querySelector('.profile__add-button');\nvar profileAvatarEdit = document.querySelector('.profile__avatar-edit');\n\n// кнопки закрытие попапа\nvar profileCloseButton = document.querySelector('.popup__icon-close_profile'); // (профиль)\nvar placeCloseButton = document.querySelector('.popup__icon-close_place'); // ( место)\nvar imageCloseButton = document.querySelector('.popup__icon-close_image'); // (изображения)\nvar avatarCloseButton = document.querySelector('.popup__icon-close_avatar'); // (аватарка)\n\n// кнопка сохранить (попап)\nvar formSubmitButton = placeForm.querySelector('.form__submit-button');\nvar formSubmitButtonAvatar = avatarForm.querySelector('.form__submit-button');\nvar formSubmitButtonProfile = profileForm.querySelector('.form__submit-button');\n\n// карточки (templete)\nvar placeContainer = document.querySelector('.places');\nvar placeTemplate = document.querySelector('#place-template').content;\n\n// селекторы\nvar popupOpenedSelector = 'popup_opened';\nvar popupContainerImage = '.popup__container, .popup__container-image';\nvar placeSelector = '.place';\nvar imageSelector = '.place__img';\nvar titleSelector = '.place__title';\nvar btnLikeSelector = '.place__like-button';\nvar placeRemoveBthSelector = '.place__remove-button';\nvar placeBtnLikeActiveSelector = 'place__like-button_active';\nvar placeQuantityLikesSelector = '.place__quantityLikes';\n;// CONCATENATED MODULE: ./src/components/modal.js\n\n\n// Открытие и закрытие popup\nfunction openPopup(popup) {\n  popup.classList.add(popupOpenedSelector);\n  popup.addEventListener('click', keyHandlerOverlay);\n  document.addEventListener('keydown', keyHandlerEsc);\n}\nfunction closePopup(popup) {\n  popup.classList.remove(popupOpenedSelector);\n  popup.removeEventListener('click', keyHandlerOverlay);\n  document.removeEventListener('keydown', keyHandlerEsc);\n}\nfunction editPopup(_ref) {\n  var elOpen = _ref.elOpen,\n    elClose = _ref.elClose,\n    form = _ref.form,\n    popup = _ref.popup,\n    onSubmit = _ref.onSubmit,\n    onOpen = _ref.onOpen;\n  // Если есть элемент открытия попапа, подключаем событие клика\n  elOpen && elOpen.addEventListener('click', function () {\n    openPopup(popup);\n    onOpen && onOpen();\n  });\n\n  // Если есть в попапе форма, подключаем слушатель ее отправки\n  form && form.addEventListener('submit', function (evt) {\n    evt.preventDefault();\n    onSubmit && onSubmit(evt);\n    closePopup(popup);\n  });\n\n  // Подключаем событие закрытия попапа\n  elClose.addEventListener('click', function () {\n    closePopup(popup);\n  });\n}\n\n// Закрытие по нажатию на оверлей\nfunction keyHandlerOverlay(evt) {\n  var popupActive = document.querySelector(\".\".concat(popupOpenedSelector));\n  if (!evt.target.closest(popupContainerImage) && popupActive) closePopup(popupActive);\n}\n\n// Закрытие по нажатию на Esc\nfunction keyHandlerEsc(evt) {\n  if (evt.key === 'Escape') {\n    var popupActive = document.querySelector(\".\".concat(popupOpenedSelector));\n    popupActive && closePopup(popupActive);\n  }\n}\n;// CONCATENATED MODULE: ./src/components/validate.js\n// Функция показать ошибку инпута\nvar showInputError = function showInputError(formElement, inputElement, errorMessage, inputErrorClass, errorClass) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.id, \"-error\"));\n  inputElement.classList.add(inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(errorClass);\n};\n// Функция скрыть ошибку инпута\nvar hideInputError = function hideInputError(formElement, inputElement, inputErrorClass, errorClass) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.id, \"-error\"));\n  inputElement.classList.remove(inputErrorClass);\n  errorElement.classList.remove(errorClass);\n  errorElement.textContent = '';\n};\n// Проверка на валидацию\nvar checkInputValidity = function checkInputValidity(formElement, inputElement, inputErrorClass, errorClass) {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity(\"\");\n  }\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, inputErrorClass, errorClass);\n  } else {\n    hideInputError(formElement, inputElement, inputErrorClass, errorClass);\n  }\n};\n// Методом some проходимся по инпутам, если есть невалидные - false\nvar hasInvalidInput = function hasInvalidInput(inputList) {\n  return inputList.some(function (inputElement) {\n    return !inputElement.validity.valid;\n  });\n};\n\n// слушатель проверки на валидность у инпутов\nvar setEventListeners = function setEventListeners(formElement, inputSelector, submitButtonSelector, inactiveButtonClass, inputErrorClass, errorClass) {\n  var inputList = Array.from(formElement.querySelectorAll(inputSelector));\n  var buttonElement = formElement.closest('form').querySelector(submitButtonSelector);\n  toggleButtonState(inputList, buttonElement, inactiveButtonClass);\n  inputList.forEach(function (inputElement) {\n    inputElement.addEventListener('input', function () {\n      checkInputValidity(formElement, inputElement, inputErrorClass, errorClass);\n      toggleButtonState(inputList, buttonElement, inactiveButtonClass);\n    });\n  });\n};\n// Для каждой формы проверка на валидность\nfunction enableValidation(_ref) {\n  var formSelector = _ref.formSelector,\n    inputSelector = _ref.inputSelector,\n    submitButtonSelector = _ref.submitButtonSelector,\n    inactiveButtonClass = _ref.inactiveButtonClass,\n    inputErrorClass = _ref.inputErrorClass,\n    errorClass = _ref.errorClass;\n  var formList = Array.from(document.querySelectorAll(formSelector));\n  formList.forEach(function (formElement) {\n    setEventListeners(formElement, inputSelector, submitButtonSelector, inactiveButtonClass, inputErrorClass, errorClass);\n  });\n}\n\n// Функция смены кнопки\nvar toggleButtonState = function toggleButtonState(inputList, buttonElement, inactiveButtonClass) {\n  if (hasInvalidInput(inputList)) {\n    disabledSubmitButton(buttonElement, inactiveButtonClass);\n  } else {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(inactiveButtonClass);\n  }\n};\nfunction disabledSubmitButton(btn, inactiveButtonClass) {\n  btn.disabled = true;\n  btn.classList.add(inactiveButtonClass);\n}\n;// CONCATENATED MODULE: ./src/components/card.js\n\nfunction isLikes(likes, myUserId) {\n  return likes.find(function (like) {\n    return like._id === myUserId;\n  });\n}\n\n// функция создания элемента карточки\nfunction createCardPlace(_ref) {\n  var myUserId = _ref.myUserId,\n    element = _ref.element,\n    tmpl = _ref.tmpl,\n    byClick = _ref.byClick,\n    byLikes = _ref.byLikes,\n    byDelete = _ref.byDelete;\n  var card = tmpl.cloneNode(true);\n  var image = card.querySelector(imageSelector);\n  var title = card.querySelector(titleSelector);\n  var btnLike = card.querySelector(btnLikeSelector);\n  var placeRemoveButton = card.querySelector(placeRemoveBthSelector);\n  var likesEl = card.querySelector(placeQuantityLikesSelector);\n  title.textContent = element.name;\n  image.src = element.link;\n  image.alt = element.name;\n  likesEl.textContent = element.likes.length;\n  if (isLikes(element.likes, myUserId)) {\n    btnLike.classList.add(placeBtnLikeActiveSelector);\n  } else {\n    btnLike.classList.remove(placeBtnLikeActiveSelector);\n  }\n\n  // Добавляем лайк к карточке\n  btnLike.addEventListener('click', function (e) {\n    var likeCard = isLikes(element.likes, myUserId);\n    byLikes({\n      id: element._id,\n      isLikes: likeCard\n    }).then(function (res) {\n      e.target.classList.toggle(placeBtnLikeActiveSelector);\n      likesEl.textContent = res.likes.length;\n      element.likes = res.likes;\n    });\n  });\n  if (myUserId === element.owner._id) {\n    // Слушатель удаления карточки с страницы\n    placeRemoveButton.addEventListener('click', function () {\n      byDelete({\n        id: element._id\n      }).then(function () {\n        placeRemoveButton.closest(placeSelector).remove();\n      });\n    });\n    // Показываем кнопку удаления\n    placeRemoveButton.classList.add('show');\n  }\n\n  // Слушатель открытия картинки\n  image.addEventListener('click', function () {\n    byClick(element);\n  });\n  return card;\n}\n;// CONCATENATED MODULE: ./src/components/api.js\nvar config = {\n  baseUrl: 'https://nomoreparties.co/v1/plus-cohort-26',\n  headers: {\n    authorization: 'dabe7799-e763-45ae-be1f-3576699b59b0',\n    'Content-Type': 'application/json'\n  }\n};\n// инициализация карточек\nfunction getCards() {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    headers: config.headers\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    // если ошибка, отклоняем промис\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n  });\n}\n\n// инициализация  редактирование профиля\nfunction getMyProfile() {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    headers: config.headers\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    // если ошибка, отклоняем промис\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n  });\n}\nfunction editProfile(_ref) {\n  var name = _ref.name,\n    about = _ref.about;\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      about: about\n    })\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    // если ошибка, отклоняем промис\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n  });\n}\nfunction addNewCard(_ref2) {\n  var name = _ref2.name,\n    link = _ref2.link;\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    method: 'POST',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      link: link\n    })\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    // если ошибка, отклоняем промис\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n  });\n}\nfunction deleteCard(_ref3) {\n  var id = _ref3.id;\n  return fetch(\"\".concat(config.baseUrl, \"/cards/\").concat(id), {\n    headers: config.headers,\n    method: 'DELETE'\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    // если ошибка, отклоняем промис\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n  });\n}\nfunction cardLikes(_ref4) {\n  var id = _ref4.id,\n    isLikes = _ref4.isLikes;\n  return fetch(\"\".concat(config.baseUrl, \"/cards/likes/\").concat(id), {\n    method: isLikes ? 'DELETE' : 'PUT',\n    headers: config.headers\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    // если ошибка, отклоняем промис\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n  });\n}\nfunction editAvatar(_ref5) {\n  var avatar = _ref5.avatar;\n  return fetch(\"\".concat(config.baseUrl, \"/users/me/avatar\"), {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatar\n    })\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    // если ошибка, отклоняем промис\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n  });\n}\n;// CONCATENATED MODULE: ./src/components/index.js\n\n\n\n\n\n\n\n// включение валидации вызовом enableValidation\nenableValidation({\n  formSelector: '.form',\n  inputSelector: '.form__input',\n  submitButtonSelector: '.form__submit-button',\n  inactiveButtonClass: 'form__submit-button_inactive',\n  inputErrorClass: 'form__input_type_error',\n  errorClass: 'form__input-error_active'\n});\nfunction loadCards(myUserId) {\n  getCards().then(function (cards) {\n    // карточки (место)\n    loadingCards({\n      myUserId: myUserId,\n      cards: cards,\n      tmpl: placeTemplate,\n      place: placeContainer,\n      onClickCard: openImage\n    });\n  }).then(function (result) {\n    console.log(result);\n  }).catch(function (err) {\n    console.log(err); // выводим ошибку в консоль\n  });\n}\n\ngetMyProfile().then(function (res) {\n  var myUserId = res._id;\n  profTitle.textContent = res.name;\n  profSubtitle.textContent = res.about;\n  loadCards(myUserId);\n\n  // устанавливаем значение инпутов\n  fillProfileInputs({\n    name: res.name,\n    job: res.about\n  });\n\n  //Редактировать профиль (попап)\n  editPopup({\n    elOpen: profileEditButton,\n    elClose: profileCloseButton,\n    form: profileForm,\n    popup: popupProfile,\n    onSubmit: changeValue\n  });\n  //  новая карточка (попап)\n  editPopup({\n    elOpen: profileAddButton,\n    elClose: placeCloseButton,\n    form: placeForm,\n    popup: popupPlace,\n    onSubmit: function onSubmit(evt) {\n      addNewCardPlace(evt, myUserId);\n    },\n    onOpen: function onOpen() {\n      disabledSubmitButton(formSubmitButton, 'form__submit-button_inactive');\n    }\n  });\n  // картинки (попап)\n  editPopup({\n    elClose: imageCloseButton,\n    popup: popupImage\n  });\n\n  // Инициализация попапа изменения аватара\n  editPopup({\n    elOpen: profileAvatarEdit,\n    elClose: avatarCloseButton,\n    form: avatarForm,\n    popup: popupAvatar,\n    onSubmit: editProfileAvatar,\n    onOpen: function onOpen() {\n      disabledSubmitButton(formSubmitButtonAvatar, 'form__submit-button_inactive');\n    }\n  });\n}).then(function (result) {\n  console.log(result);\n}).catch(function (err) {\n  console.log(err); // выводим ошибку в консоль\n});\n\n// Добавляем карточек на страницу при загрузке страницы\nfunction loadingCards(_ref) {\n  var myUserId = _ref.myUserId,\n    cards = _ref.cards,\n    place = _ref.place,\n    tmpl = _ref.tmpl,\n    onClickCard = _ref.onClickCard;\n  cards.forEach(function (card) {\n    var cardEl = createCardPlace({\n      tmpl: tmpl,\n      myUserId: myUserId,\n      element: card,\n      byClick: onClickCard,\n      byDelete: deleteCard,\n      byLikes: cardLikes\n    });\n    place.append(cardEl);\n  });\n}\n\n// Добавляем новую карточку\nfunction addNewCardPlace(evt) {\n  // значение инпутов\n  addNewCard({\n    name: titleInput.value,\n    link: linkInput.value\n  })\n  // Добавляем функцию создания новой карточки\n  .then(function (res) {\n    var cardPlace = createCardPlace({\n      element: res,\n      tmpl: placeTemplate,\n      byClick: openImage,\n      byDelete: deleteCard,\n      byLikes: cardLikes\n    });\n    // новая карточка в начало\n    placeContainer.prepend(cardPlace);\n    // очищение формы карточек\n    evt.target.reset();\n  });\n}\n\n// открытиe попапа с  картинкой\nfunction openImage(element) {\n  popupImageTitle.textContent = element.name;\n  popupImagePicture.src = element.link;\n  popupImagePicture.alt = element.name;\n  openPopup(popupImage);\n}\n\n// Добавляем новую карточку профиля\nfunction editProfileAvatar(evt) {\n  editAvatar({\n    avatar: avatarLinkInput.value\n  }).then(function (res) {\n    profAvatar.src = res.avatar;\n    evt.target.reset();\n  });\n}\n\n// Уравниваем новые значение имени, описания с введенными\nfunction fillProfileInputs(_ref2) {\n  var name = _ref2.name,\n    job = _ref2.job;\n  nameInput.value = name;\n  jobInput.value = job;\n}\n\n// Меняем значение value у input\nfunction changeValue() {\n  profTitle.textContent = nameInput.value;\n  profSubtitle.textContent = jobInput.value;\n  editProfile({\n    name: nameInput.value,\n    about: jobInput.value\n  });\n}\n\n// UX всех форм\nformSubmitButton.addEventListener('click', function () {\n  formSubmitButton.innerHTML = 'Сохранение...';\n});\nformSubmitButtonAvatar.addEventListener('click', function () {\n  formSubmitButtonAvatar.innerHTML = 'Сохранение...';\n});\nformSubmitButtonProfile.addEventListener('click', function () {\n  formSubmitButtonProfile.innerHTML = 'Сохранение...';\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///740\n")}},__webpack_exports__={};__webpack_modules__[740]()})();